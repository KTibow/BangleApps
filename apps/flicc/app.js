///<reference path="../../typescript/types/main.d.ts" />

const _clockFont = {
  1: require("heatshrink").decompress(
    atob(
      "2FYwJC/AH4A/AH4A/AH4A/AEsD//AAYP4h//BQUH/+ACo8f//4CoU/DYUAAgPwCo9///+CoQFBCAX///8Co4KBHgIVBAgIxBgIEBEAIAFBQRNBgf5EwZhBEARsHAAPAgf7CoZsBEAQVFg40Bv/gDQPgA4UPDAJzDAAcPJ4Mf+AVBIgIVBA4KFBCo4KBAQIVBOoQVB8ACDVwoHBg/4FAQVCFAQjCAAgKCS4IVDv4KBNQMHCo4KBgP8ga9CCoIBBCqIIBCoQ2BeAwDC/wMDCoN+CqhcCCqsBCqJcCMQIVFJgQDBCqA2CF4IVF/4ACCvmBCtRXWCIwVZYpoAHeJQ2DCueAgEB/gVFEAYAGBgIVU4EAgYVHEAMD8AVFj4VC/AVFGwQIDCogdBg4VHEAIKBCosP+ACCCosfBQYVFg7RBn/gCosPAoM/Co//gH/CowKECosD/4AB4AVFBQgVFgIKCB4IVEBQjcH/7pBCoo/BAALGI/5vBCowKDAA0P/53BCowKDAAxNBJY4KLAH4A/AH4A/AH4A/AH4AiA"
    )
  ),
  2: require("heatshrink").decompress(
    atob(
      "2FYwJC/AH4A/AH4A/AG0H+AV/Cv4V/CrP///4/wFBn/AgEP8EAj4JCCpF/Co4LBAwIVQgYLBJw4VFv4oBCoMHBYQVPj/Ah4LB/gVJn+ACosfBYJuHTIQVHn/wLIIVMMwQFBv5yB/4KBCo4lBCowzCCqI+CUIQVJgP7CoUBNQQgCCo8PCoP5VAN/gKWCcAQVI8AVagbYCBoQVHg/ggfxE4P+Cp69B+AVpIYIVB/gaBBoIDDCowKBCoN+QIInDF4YVH/AVZAgIVNCALdBvwaCCp38CoM/CqxyBCpqUBh+ACqcfwEfw4VQ/wVEYp0AvwVD8DxOCoM/gAVSv4VBh/PCqvAgf8BIMP8AVJn8+Coa2BCp1+AwPfCoP+BIMfCpYPBg//wCgBCoXACpMfCov/D4QVHPIUfKIIVDv4CEAAh5DCoUDFAfggIFCCov/zB5BCo34GIIVGDwJCBh4CBCocf///OAQVLHYcPCoJOCAAoVGEoQvB/7wGdwSACCoovB/7EGSwoiCKId/TwQAGWAYAGRYQA/AH4A/AH4A/AHg"
    )
  ),
  3: require("heatshrink").decompress(
    atob(
      "2FYwJC/AH4A/AH4A/ABsH8AV/CqUH+AV/Cv4V/CrP///4CoM//wIB/kH/kAh//wAIBgP/EoIVEAgINB/kfCoN/CAQaCBAIVD8IEB4AVBn4MECoM/AoIVE8YEBEYP8v/8gYHBDIIwCHIIVD84EBOYP8CIMHA4JgCAgI5BCon9HIQDB/hRBHgRsBHISZD9/ANIQ8Cj/4CQOAIwJZB+AVDA4KVCIgUfLoN/4CgDCohMBgYVCQwM/AQcHJgICBCoYSBgIYBWQU/AQIuBFAIjCCoakCCoSTCYQQVBIwMBCogCBCot+CoXwj5GBCpSpCAQQLBCoQIBCowmBCQTYCCoRcBCopJBCpED+ByCCpBoBCoJOBCoX4Cod+CqIEBBoIVLUIQVS/4ACCoIFDCvl/CtRBQTIQABTIb4CYpgVuwAVjgAVVAQQABj/ACsgEBBYPAj4NC/AVMKQIOBh4NC/wVLn48Bh4VBCAMBCoLmBCpIIBH4MHRIMD/gBBCpMfEwIYBgYIBh4VB/+YCpEP/0B//AAQU//AEBOAIVHg//AAJwBAgXwCpY3BAAIKCAgIQBCpQhB/5zDAoKLBv/8CpAmCSIJdBGAcfCpUfHYRHCSwJiBIIwADCAIFDv4PCAH4A/AH4A/AH4AIA="
    )
  ),
  4: require("heatshrink").decompress(
    atob(
      "2FYwJC/AH4A/AH4Afg/+Cqcf/4VTv4rU/4VTgIVW/gVSgf+ggVTFSauB/AVU+AV/Cv4Vt///bgMH//AcYIdCv8A/0HdQoVDn//CQIVGh4VJv4DCCo0/CpEBAYP+Co9/CpEDAYP/Co41CCov4NgIABwAVNTIRhCQgIVFCgwVDj4CBn/gCoy9GCofgDAQVGXAIVHn4KBh4VHwAVJBQMH/AVQv4KBgYVHCgoVEAoMDWgIVSgIVGcYIVIBQQVrAYIVmfYYVmNIIV/NtYVWbdYKCQ4IVmBgIVD/AFB/4VOCYIVQn+ACosBCpvAAoUDWoMDCpkf8EAh4VBCAMHCpoYDHwUPCpkPKQN/CoWAn6ZMg/+CQJaB//5/4VMMoIABQwIDB/wVMFIIABbAX//gVMEwYEBn///AVNEwLYCj//+AVNCAKxBVoXACpqrCAAQEEAH4A/AH4A/AHQ="
    )
  ),
  5: require("heatshrink").decompress(
    atob(
      "2FYwJC/AH4A/AH4Afg/+Cqcf/8PwAVRv/+j/ACqP//0/8AUQgIVW/gVSgf+ggVT/kACqUH/CbBQaMH+ACBV6IVCeCYV/Cv4AC////kf4P+A4MBcYMH/7OICofACoT5D/43ICpD5Bv4KBCpn/CocBBQIdCCpV/OoX4gYKBDoQVH/AVF+BsBAAOATJIVBn4NBA4MPKoKEICo8P8EPBIM/8AVQj4SBAQQVKAIIVDAgSwHCo5cGCqKeDCpY+BAgSeCcAQVNH4N+Cq8BCpgECKoP+CoTIBCppVBCqEDCoYRCCpxPBFIP/AAQViPYQVT/hRCCsw/BIYQVSN4QRHCpN+QogVPv7HCCqQGCCqM/CquH8BbBCqOPCoN/CqEfCqvPF4WAgEDDYIVLh/fCoQCBWoQVM/4oBj4oBg4VSBIMPAQIVLg4VCh4oBDAQVNBIQDB/5tNCocD/4ABBIIVLCIIJBgIVCI4IVM/wKCCoTFNCok///8CpsBB4aeBQQ4VDAA5YBKw4A/AH4A/AH4A0"
    )
  ),
  6: require("heatshrink").decompress(
    atob(
      "2FYwJC/AH4A/AH4A5vgVU/wUTgP/Cv4VrQasAnjw/AH4Aqj7YC/0H/AEBv+ACpV///gCoMDCoYUKgP///wCoX8BIIzCABEDCoInB/0B/weBAQIAJg4VBE4IQBCoQuCABEP/wBBCYQ+BIgaCJ+BZBCoRqBOAYVJQIIVDn+Ag50BABM/4CoCCoXAh4VMXYICBCoMfCoI0BCpkcIIRIBC4IVLAgYVBFIIVTNYI0CIJgVFTYIVRVoIVNJwbvDAYLbMCozwLCoINDE4X/CpkP/5CCCoV//AVLg4kDCqED/4sCCoU/L4YAJCoIPBCofgCpk/IQQrRLAITBCqJnB/5tRFgavECpwQBwDFQIQYVCeIIZCQpvACIMDCqEfCof4v4VSg4VBwASKgwVFh/wn4VLvwVG8AFBQBYVFj4VB8AVNHYIVC4AtBVhivEDIJZBVhjbEDIKFBCpf4g//gAVCWISsL///CYIBBDILdBCpUPCoIOB/0BC4ICCABI/B/46BCoIoCCpcBCoKSB/w+DIgKaLQQIVBQAajCLBRlLAH4A/AH4A/AHY"
    )
  ),
  7: require("heatshrink").decompress(
    atob(
      "2FYwJC/AH4A/AH4A/AH4A/AEsf/4EFgf8AwMD/EAh4OCj/AgF///gA4IECgIVCg4VBBwcf4MB///+EAAgYVEAoIJBDIMf4cDAwYEC/kB/wVDBIYVB48HAwYECCYIVCh/wBIkf58P/wBBMQQABCongBIkf78fJQQGB/AEBwF/CoYJESIMfOQIVBn4EBv4VDSQIJEj/8n6bCwE/wAYB4AVFBwICBGAIQDEwwJBAgIhBAgJGB+ALCjgtBCoXgD45cCCoL1DPwgVEBIghCCobWCBYRSCCobKBG4jwBdggVCH4IJGCpoJHRQQVB/ALDIYMAvwVDgYVCN4IVFBYIVC/wJE/AVCDoQVFg4VKh//IQMD/4AC/BDBH4MBBIgVBg//FgIVRCIQDDBYRDBCpMAAoPwCowBDCo8/IQIVSLAP+BYo/BIYQVHaAP/EYIFBcIZvCBIgVDFgIVFgAVMN4OBCov+Y4IVKv4VHeYJFBCpE/4ILEgF+CpkfCo1/h/ACqYNC/wVFgwEDBYhJBCpN+Co0HcoWfwCPBBIYQBv4VDAgUP+AHB34VBBIS1BCAk/wF/BwJ/BCoIoCBIYVDD4WAn4+CCooGD8AVBCAX/wEfHwN/A4MPCoQJDCof4g4MBj/+gf/CoR0CAYMBBIIVBGwP/BgIlBAAJQCRQYJDCoIQCYYILDCIQVCGYIJCCoIQC/EAGoIwCCoLiCBIgVBAwR2BOAIaCCohrBBITjCAwJRBSAIaDgYZCTwSbCPIQhDJwL/DAAYJJAH4A/AH4A/AH4A/AH4AfA="
    )
  ),
  8: require("heatshrink").decompress(
    atob(
      "2FYwJC/AH4AJgfgCqcH+AVTh/4A4t/Cv4Vc/iDOCpqvHCpoAHCv4V/CpsH//AYocB//gn+Av4FCDQP//4VBj//dwIVCDgP4CoQFBFAIVEAgIIBCoQcB/gVCh///wVFAYIEBCoU/B4IVCDYIMBCoZJBAAOACoQGCCoQbBBgIVDgYOC4AVBDgP7/+/CAN/94MBCoJFBg5IC8AVDwEfCoV8GYKRBTIUPQIMfCoUDDgJpBCoIMBn6aBCoYFBh/wCoMHBQJLBCoIMBEQIVDj7DDAIQlBIgV/BgIlCCo34CoIvBCo4IBCoSOBHQIVDEQJoBCoIMBUgQVDAQIVSv4CBgP8BQJICBQIVBAgIVbvwVOgYVHAwIVCKIJ4CCp6KCCpf/AAX+Cv4V+/yZCaAQVkYoYVCbaQVD4AFBv4VJBAQVvh/gUgQVJPgYVUgPwCoQMBgIVKKAUD/gVBg/4AwIVHYQUfHQMD/AVCEAMHCpQ6Ch4VCgYKBh4VKEgUfK4RUB4F/34VG/4VCEIP/CoQKBAALxHv/mMYQAB8AVCv///wVIIQI6BAAPACoU/CpIKBbgQVBwAVCj///AVHBQLGCEgLbCL4XwCo6MBTQQkBCobvCCo4gBAwIOBboIAFCo6aDABIVBBpYV/ABJrCAB6ICCqMD8CQOAAjHECqEPcAMBfIIrQCQICCK6H/wE//gVQgP/AAJEBACAVCOATCQCoKcCAB8fCoLwSg//QSJCDICQA/AEwA="
    )
  ),
  9: require("heatshrink").decompress(
    atob(
      "2FYwJC/AH4A/AH4A5gPgCqcH+AVU/AVTh/8Cv5XVQaqvVAH4A/ACk/wH/YQMD+EH8E/eocf/4VGwf/BwIVD/4QDAgPACouHBwQVC8IQDgIEBfYs/x4JBwAVC8YGBewMHAgP4CoufEgQVC84mDh4EBLoYVC34VF94VDNgP//wVFAwN/8AVDwEfHgM/+EDQgs/BYQVDBoMHHgM/OAJkBCohNCEIIVBGQMDCoN/CQICCCoZ5BCogSBgIVCB4SwECoUHCoZIBgIuBNQUfCooFBCoi9CCYKWCj4lBCosD/AVGIYROBCopdBCpLYCCpoMCCogIDCpoIBCoQ0CCsgRCCqX/AAQV/Cv4REYqYV/CqcBCqv8CtIBCgEPB4IVP/4VCBAQVOv4MBj4VS4APBAQIVPn4FBDAQVPj/8gf/NqMP/4ABTKMHCgKcCCp4/B/7IFCpiwB//wCqU//6CEAB0HKwoA/AH4A/AH4A0A="
    )
  ),
  10: require("heatshrink").decompress(
    atob(
      "2FYwJC/AH4A/AH4A/AG0H+AV/Cv4V/CrP///4gED//gAYPwh/+CpsPDIfwn//4AVMB4ImBCoIJBGIIVLv4EBCoPxAgJiJCoYDBHgMD+YJDCpUB//3Cof+//8TJcDKoM/8ED+/gh4VMg45Bj/wToOADoQVKh4CC/AVBgEBCpqRBFwIoDDAIVKj69Bgf8AIIVRgIVEv4VLn+ACoasCCp8A/wVRAwQVEBAYVeHAYVBA4IVk/4ABCv4V/dAgV/CqQMECqOACtMf4AGBwAVU+AVR8EAgP8CqEPAQMDCp/4AQgVOEoISB/wuB/AVO/+YAQOAv5tOgP//ACBAAIVRgAVC8AVNCQIVBv4VBYpwSBNwMfCoLxOCQKEC/4DBCpytCF4LzCAH4A/AH4A/AH4A/AAQA="
    )
  ),
  11: require("heatshrink").decompress(
    atob(
      "2FYwJC/AH4A/AH4A5v4V/Cv4V/Cv4V/AAkP/4VEn/4AQOAgEB/kAj/+BgIFBn//4AVCgP/DgMfCoQbBv//AwIVBAoPwCoUDCoOAj4eBgYVBBAPgCoIkCD4UAg4GB4AVEDwQlB/gFCF4RdCEQMPCoXwDwQlB/gFCLwIVBMYIiBCogeCEoIVB/BDBCoU/FIP4h5QBg4VB+EDEoP9AoJfBCoV/wEDEAIVC8Ef8EBCoP/AoKnCCoSqCCok/U4YVBAoIIBA4K6C/w+BOgIVBVoI3B/4FCDAIVBMIIVBNQIVBBQQ7CCoLzCBQLpCEQIVEvwIBcYIVE8AVBUYIVCAgI2BCofA/wFCCo0/AgQmBGgQVFPAI8DCpJGBCpgRBNAIVQCIRlBCp49DCo//AAXwCoIGDwDKBOwIID8AVMG4N+CtDtB/wVSNYQVcRIQABTIixCwIVBfQQAB/yNBCpMfwP4b4QVDYoQVLYoYVkh/DAwIVMMggVJXIIVDPQoVDPon+UYMAggVHg/n8DzBAwMICoWAEQLqBSAc8Cog7Cj4VBj4VC8AKBHAQEBCoY7Cj/ACoPAAoQQB/4MBAQL3BBgI7CAQP+FAIFBCoV/BgIuBCoYlCBYIVBM4N/CoQZBgYVGQwP/CoMH/0BAoIVC/EPOAIJCMgP8DYI2BAYIABNAUfAoI0BCocHBAI0BFIQFCCoMPAwI6BCoYlCGgIRBAoaUCAwJ2BRIYlCGgIVBn4FCCoIMCNIIVDBYI0CCoJRBaAgMBCIYDCEoIeBCoIlBBQQABUIQAFUIQA/AH4A/AH4A/ABY"
    )
  ),
  12: require("heatshrink").decompress(
    atob(
      "2FYwJC/AH4A/AH4A/AAf8Cv4Vdg/gCv4V/Cv4VZ///+f4gEDAQkfCQX8j+ADQYVB+IVHBQIRBCoPAgEBCo4HBgfwgIKBCIIVJCQQVDgYKBMYP8h4VC/AgC+ASBg4CC+EHBQQVCDIJMBEAYVF8EP/9/JYIVFg6ZCCQX+CoUfFoIJB/gPCJgMPAoQSCCoc/4EBAwIVBIoICBj4VCv0Ah4OBHIM/S4IVR4F/XwICB/g+BGwYVF34VCAwIVEOII2CCoU/dYIVDF4IJBwAVMz4CB4CABCobCBGwYVFj4CBCAIVBAgTuCEAIVEwAVBAQOBEgIVMBYM/CpLTCAoQVFh4CBKARcECpM+CoxnBCYKgBOYQVD4AVB4AVB/4ACCosA/4VCRITZCCqUHAQIVHCYIXBCot8CqQCBCoPgCqT9BAQIVHWYYVKTIQABCoqZDAQP4CqUD+AVB+AVIh/BBAIVE+P4gICCCsH+CoQSB+EB/IVBCAIVEg/j+CbBCof5CoQKBCp/7A4ICCCpV/CogDBCoX+CYMeCoUD+4NBn4VCZQIDB/4gCBAM/VYQVMAQN/wACCCoQKCj8HEgISEEAXAFwQVBgP/A4IVBUwV/B4QgC8AQBCo0PGANgCo7RBOAIVFg5GDCoYgC///CYKeC/5fBg4aBPoQSBKgUHCoJNBCosDSYaQBCoY1BBQQVFNQQVFBQQVBJgIVCW4S5CCokfCoU/EoQVHh7GCAAsHCQQA/AH4A/AH4A/ACAA="
    )
  ),
};
Graphics.prototype.setFontshantellsans = function () {
  // Actual height 98 (102 - 5)
  // 1 BPP
  return this.setFontCustom(
    E.toString(
      require("heatshrink").decompress(
        atob(
          "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"
        )
      )
    ),
    48,
    atob("VzZaWFxOWVpXVQ=="),
    132 | 65536
  );
};
Graphics.prototype.setFontinflate = function () {
  return this.setFontCustom(
    E.toString(
      require("heatshrink").decompress(
        atob(
          "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"
        )
      )
    ),
    46,
    atob("IiZJOERFSERJQklHIw=="),
    88 | 65536
  );
};
Graphics.prototype.setFont4x5Numeric = function () {
  this.setFontCustom(
    atob("CAZMA/H4PgvXoK1+DhPg7W4P1uCEPg/X4O1+BQA"),
    46,
    atob("AgQEAgQEBAQEBAQEAg"),
    5
  );
};
Graphics.prototype.setFont4x5 = function () {
  this.setFontCustom(
    atob(
      "AAAAdBgGAfV8CfyBIiQKrcAMAA6IARcAFXVARxAAwABCEAAIAAGTAPx+BHwAvXoK1+DhPg7W4P1uCEPg/X4O1+ACgACoAIqIBSlAIqIIVQC9VAfR4P1UB0VA/FwP1qD9KAdGYPk+AHwAEHwPk2D4Qg+j4PweB0XA/RAHTeD9FgTWQIfgD4fg8HwPi+DZNgwfAJ1yAA=="
    ),
    32,
    4,
    5
  );
};
const offset = new Date().getTimezoneOffset();
let classDataDay, classData, currentTimeout;

function bigCountdown(remaining, now) {
  g.setFont("inflate")
    .setFontAlign(0, -1)
    .setColor(1, 1, 1)
    .clear()
    .drawString(remaining, 176 / 2, 20)
    .setFont("4x5Numeric", 5)
    .drawString(now, (176 + 5) / 2, 176 - 40);
}
function countDown() {
  const remainingTime = 60 - Math.floor((new Date().getTime() % 60000) / 1000);
  Bangle.setLCDPower(1);
  g.setFont("inflate")
    .setFontAlign(0, 0)
    .setColor(1, 1, 1)
    .clear()
    .drawString(remainingTime + 1, 176 / 2, 176 / 2);
  if (remainingTime > 1) setTimeout(countDown, 1000 - (Date.now() % 1000));
  else
    setTimeout(() => {
      g.setFont("inflate")
        .setFontAlign(0, 0)
        .setColor(1, 1, 1)
        .clear()
        .drawString("1", 176 / 2, 176 / 2);
    }, 1000 - (Date.now() % 1000));
}
function bigTime(h, m) {
  g.setColor(0.5, 1, 0.5);
  g.clear();
  g.drawImage(_clockFont[h.toString()], 0, 0);

  g.setColor(0, 1, 0).setFont("shantellsans");
  if (m[0] == "1" || m[1] == "1") {
    g.setFontAlign(1, -1);
    g.drawString(m, 176, 55);
  } else {
    g.setFontAlign(0, -1);
    g.drawString(m, 88, 55);
  }
}

let cachedClasses, cachedClassesMinute;
function getClasses(minute, classes) {
  if (cachedClassesMinute == minute) return cachedClasses;
  const applicableClasses = classes.filter((classItem) => {
    return classItem.end > minute;
  });
  const activeClass = applicableClasses.find((classItem) => {
    return classItem.start <= minute;
  });
  const nextClass = applicableClasses.find((classItem) => {
    const timeDifference = classItem.start - minute;
    return timeDifference <= 5;
  });
  cachedClasses = [activeClass, nextClass];
  cachedClassesMinute = minute;
  return cachedClasses;
}

let infoShown = false;
function draw() {
  infoShown = false;
  const now = new Date();
  const nowStr = require("locale").time(now, 1).trim();
  if (classDataDay != now.getDay()) {
    classDataDay = now.getDay();
    classData = JSON.parse(
      require("Storage").open(`classes-${classDataDay}.json`, "r").readLine() ||
        "[]"
    );
    // classData = [
    //   {
    //     name: "Math",
    //     room: "117",
    //     start: ((Math.floor(now.getTime() / 60000) - offset) % (60 * 24)) + 1,
    //     end: ((Math.floor(now.getTime() / 60000) - offset) % (60 * 24)) + 4,
    //   },
    // ];
    // classData = [];
  }
  const currentMinute = Math.floor(now.getTime() / 60000) - offset;
  const minuteOfDay = currentMinute % (60 * 24);
  const classes = getClasses(minuteOfDay, classData);

  if (classes[0]) {
    const remainingMins = classes[0].end - minuteOfDay;
    bigCountdown(remainingMins, nowStr);
    if (remainingMins == 1) {
      Bangle.buzz(500);
      countDown();
    }
  } else {
    if (classes[1]) {
      // 1. class name, 25 high
      // 2. padding, 10 high
      // 3. room, 25 high
      // 4. padding, 10 high
      // 5. countdown, 50 high
      // total; 120 high
      g.setColor(1, 1, 1)
        .setFont("4x5", 5)
        .setFontAlign(0, -1)
        .clear()
        .drawString(classes[1].name.toUpperCase(), 176 / 2 + 2, 28)
        .drawString(classes[1].room.toUpperCase(), 176 / 2 + 2, 63)
        .fillCircle(176 / 2, 123, 25)
        .setColor(0, 0, 0)
        .setFontAlign(0, 0)
        .setFont("4x5Numeric", 5)
        .drawString(classes[1].start - minuteOfDay, 176 / 2 + 2, 123);
    } else {
      bigTime(nowStr.split(":")[0], nowStr.split(":")[1]);
    }
  }
  if (currentTimeout) clearTimeout(currentTimeout);
  currentTimeout = setTimeout(draw, 60000 - (Date.now() % 60000));
}
function drawInfo() {
  infoShown = true;
  const now = new Date();
  const monthName = [
    "JAN",
    "FEB",
    "MAR",
    "APR",
    "MAY",
    "JUN",
    "JUL",
    "AUG",
    "SEP",
    "OCT",
    "NOV",
    "DEC",
  ][now.getMonth()];
  const dayOfMonth = now.getDate().toString();
  const battery = E.getBattery();
  const datestamp =
    now.getFullYear() +
    "-" +
    (now.getMonth() + 1).toString().padStart(2, "0") +
    "-" +
    now.getDate().toString().padStart(2, "0");
  const weatherData = JSON.parse(
    require("Storage").open("weather.json", "r").readLine() || "[]"
  );
  const currentWeather = weatherData.find((weather) => weather[0] == datestamp);
  g.clear()
    .setColor(1, 1, 1)
    .fillRect(0, 0, 176, 16)
    .setColor(0.5, 1, 0.5)
    .fillRect(0, 0, 176 * (battery / 100), 16)
    .setColor(0, 0, 0)
    .setFont("4x5", 3)
    .setFontAlign(0, -1)
    .drawString(battery, 176 / 2, 1);
  g.setFont("4x5", 6)
    .setFontAlign(-1, -1)
    .setColor(1, 1, 1)
    .drawString(`${monthName} ${dayOfMonth}`, 0, 20);
  if (currentWeather) {
    const low = Math.round(currentWeather[2]);
    const high = Math.round(currentWeather[3]);
    let y = 60;
    g.setFont("4x5", 3).drawString(`${low} TO ${high}.`, 0, y);
    for (const line of g.wrapString(currentWeather[1].toUpperCase(), 176)) {
      y += 18;
      g.drawString(line, 0, y);
    }
  }
}
Bangle.on("swipe", (x, y) => {
  if (x != 0) return;
  if (infoShown) draw();
  else drawInfo();
});
Bangle.loadWidgets();
Bangle.setUI("clock");
require("widget_utils").hide();
draw();
